{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/home/Documents/Code/react-portfolio/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport './style/style.css'; // Imports the Google Cloud client library\n\nconst {\n  Storage\n} = require('@google-cloud/storage'); // For more information on ways to initialize Storage, please see\n// https://googleapis.dev/nodejs/storage/latest/Storage.html\n// Creates a client using Application Default Credentials\n\n\nconst storage = new Storage(); // Creates a client from a Google service account key\n// const storage = new Storage({keyFilename: 'key.json'});\n\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n// The ID of your GCS bucket\n// const bucketName = 'your-unique-bucket-name';\n\nasync function createBucket() {\n  // Creates the new bucket\n  await storage.createBucket(bucketName);\n  console.log(`Bucket ${bucketName} created.`);\n}\n\ncreateBucket().catch(console.error); // This default export is required in a new `pages/_app.js` file.\n\nexport default function MyApp({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}","map":{"version":3,"sources":["/Users/home/Documents/Code/react-portfolio/pages/_app.js"],"names":["Storage","require","storage","createBucket","bucketName","console","log","catch","error","MyApp","Component","pageProps"],"mappings":";;;;;;;;;AAAA,OAAO,mBAAP,C,CAEA;;AACA,MAAM;AAACA,EAAAA;AAAD,IAAYC,OAAO,CAAC,uBAAD,CAAzB,C,CAEA;AACA;AAEA;;;AACA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAeG,YAAf,GAA8B;AAC5B;AACA,QAAMD,OAAO,CAACC,YAAR,CAAqBC,UAArB,CAAN;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,UAASF,UAAW,WAAjC;AACD;;AAEDD,YAAY,GAAGI,KAAf,CAAqBF,OAAO,CAACG,KAA7B,E,CAEA;;AACA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACtD,sBAAO,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD","sourcesContent":["import './style/style.css'\n\n// Imports the Google Cloud client library\nconst {Storage} = require('@google-cloud/storage');\n\n// For more information on ways to initialize Storage, please see\n// https://googleapis.dev/nodejs/storage/latest/Storage.html\n\n// Creates a client using Application Default Credentials\nconst storage = new Storage();\n\n// Creates a client from a Google service account key\n// const storage = new Storage({keyFilename: 'key.json'});\n\n/**\n * TODO(developer): Uncomment these variables before running the sample.\n */\n// The ID of your GCS bucket\n// const bucketName = 'your-unique-bucket-name';\n\nasync function createBucket() {\n  // Creates the new bucket\n  await storage.createBucket(bucketName);\n  console.log(`Bucket ${bucketName} created.`);\n}\n\ncreateBucket().catch(console.error);\n\n// This default export is required in a new `pages/_app.js` file.\nexport default function MyApp({ Component, pageProps }) {\n  return <Component {...pageProps} />\n} "]},"metadata":{},"sourceType":"module"}